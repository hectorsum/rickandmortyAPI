{"version":3,"sources":["components/LoginScreen.jsx","helpers/getFullEpisodes.jsx","hooks/useInitialStateAllEpisodes.js","components/Episode.jsx","helpers/getEpisode.jsx","hooks/useInitialStateEpisode.js","helpers/getCharacter.jsx","hooks/useInitialStateIds.js","components/Card.jsx","components/EpisodeInfo.jsx","helpers/getAllCharacters.jsx","hooks/useInitialStateAllCharacters.js","components/Character.jsx","components/Navbar.jsx","hooks/useInitialStateCharacter.js","components/CharacterInfo.jsx","routes/DashboardRoutes.jsx","routes/AppRouter.jsx","containers/App.jsx","index.js"],"names":["LoginScreen","getFullEpisodes","id","a","fetch","then","res","json","res_data","data","results","fullData","map","item","name","air_date","episode","useInitialStateAllEpisodes","useState","loading","state","setState","useEffect","Episode","console","log","season","setSeason","className","value","onChange","e","target","includes","to","getEpisode","API","characters","fullIds","parseInt","split","useInitialStateEpisode","getCharacter","data_array","status","species","gender","name_location","location","image","Array","val","push","desestructure","useInitialStateIds","Card","props","src","alt","EpisodeInfo","useParams","loading_ids","getAllCharacters","useInitialState","Character","useInitialStateCharacter","Navbar","height","width","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","activeClassName","exact","CharacterInfo","history","useHistory","onClick","length","goBack","DashboardRoutes","path","component","AppRouter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a08adc8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const LoginScreen = () => {\r\n  return (\r\n    <div>\r\n      <h1>Login Screen</h1>\r\n    </div>\r\n  )\r\n}\r\n","\r\nexport const getFullEpisodes = async(id) => {\r\n  const API = `https://rickandmortyapi.com/api/episode`\r\n  const data = await fetch(API)\r\n                    .then(res => res.json())\r\n                    .then(res_data => res_data)\r\n  const {results} = data\r\n  const fullData = results.map(item =>{\r\n    return {\r\n      id: item.id,\r\n      name: item.name,\r\n      air_date: item.air_date,\r\n      episode: item.episode\r\n    }\r\n  })\r\n  return fullData\r\n}\r\n","import {useState,useEffect} from 'react';\r\nimport {getFullEpisodes} from '../helpers/getFullEpisodes';\r\n\r\nconst useInitialStateAllEpisodes = () =>{\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading:true})\r\n  \r\n  useEffect(()=>{\r\n    getFullEpisodes()\r\n    .then(data => {\r\n      setState({data,\r\n                loading:false})\r\n    })\r\n  },[]);\r\n  return state;\r\n};\r\n\r\nexport default useInitialStateAllEpisodes;","import React, { useState } from 'react'\r\nimport useInitialStateAllEpisodes from '../hooks/useInitialStateAllEpisodes';\r\nimport '../assets/styles/components/Episodes.scss';\r\nimport { Link } from 'react-router-dom';\r\nconst API = 'https://rickandmortyapi.com/api/episode';\r\nexport const Episode = () => {\r\n  const {data} = useInitialStateAllEpisodes(API);\r\n  console.log(data);\r\n  const [season,setSeason] = useState(\"S01\");\r\n  const handleChange = (e) =>{\r\n    return setSeason(e.target.value);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"container mt-2\">\r\n        <select name=\"season-selector\" value={season} className=\"season-selector\" onChange={handleChange}>\r\n          <option value=\"S01\">Season 01</option>\r\n          <option value=\"S02\">Season 02</option>\r\n        </select>\r\n        <hr/>\r\n        <div className=\"episodes-wrapper row d-flex justify-content-center mt-4 mb-4 animate__animated animate__jackInTheBox\">\r\n        {\r\n          data.map(episode => (\r\n            episode.episode.includes(season) && (\r\n              <div key={episode.id} className=\"info-card m-3\">\r\n                <h3 className=\"m-0\">{episode.name}</h3>\r\n                <hr/>\r\n                <i><b>Release:</b> {episode.air_date}</i>\r\n                <Link to={`./episodes/${episode.id}`}>\r\n                  More...\r\n                </Link>\r\n              </div>\r\n            )\r\n          ))\r\n        }\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","export const getEpisode = async(id) => {\r\n  const API = `https://rickandmortyapi.com/api/episode/${id}`\r\n  const data = await fetch(API)\r\n                    .then(res => res.json())\r\n                    .then(res_data => res_data)\r\n  const {air_date,characters,episode,name} = data\r\n  const fullIds = characters.map(item => parseInt(item.split('/')[5]));\r\n  return {\r\n    air_date,\r\n    fullIds,\r\n    episode,\r\n    name\r\n  }\r\n}\r\n","import {useState,useEffect} from 'react';\r\nimport {getEpisode} from '../helpers/getEpisode';\r\n\r\nconst useInitialStateEpisode = (id) =>{\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading:true})\r\n  \r\n  useEffect(()=>{\r\n    getEpisode(id)\r\n    .then(data => {\r\n      setState({data,\r\n                loading:false})\r\n    })\r\n  },[id]);\r\n  return state;\r\n};\r\n\r\nexport default useInitialStateEpisode;","export const getCharacter = async(id) => {\r\n  let API;\r\n  let data;\r\n  let data_array = []; \r\n  if(typeof(id)==='string'){\r\n    API = `https://rickandmortyapi.com/api/character/${id}`;\r\n    data = await fetch(API)\r\n                    .then(res => res.json())\r\n                    .then(res_data => res_data)\r\n    const {name,status,species,gender,location:{name:name_location},image} = data;\r\n    return {\r\n      name,\r\n      status,\r\n      species,\r\n      gender,\r\n      name_location,\r\n      image\r\n    }\r\n  }else{\r\n    for(let val of Array(id)){\r\n      val ? API = `https://rickandmortyapi.com/api/character/${val}` : API=''\r\n      data = await fetch(API)\r\n      .then(res => res.json())\r\n      .then(res_data => res_data);\r\n      data_array.push(data);\r\n    }\r\n  }\r\n  let desestructure = data_array[0].map(item => {\r\n    let {id,name,status,species,gender,location:{name:name_location},image} = item;\r\n    return {\r\n      id,\r\n      name,\r\n      status,\r\n      species,\r\n      gender,\r\n      name_location,\r\n      image\r\n    }\r\n  })\r\n  return desestructure;\r\n}","import {useState,useEffect} from 'react';\r\nimport {getCharacter} from '../helpers/getCharacter';\r\n\r\nconst useInitialStateIds = (id) =>{\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading:true})\r\n  \r\n  useEffect(()=>{\r\n    getCharacter(id)\r\n    .then(data => {\r\n      setState({data,\r\n                loading:false})\r\n    })\r\n  },[id]);\r\n  return state;\r\n};\r\n\r\nexport default useInitialStateIds;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Card = (props) =>{\r\n  const {id,name,image} = props;\r\n  return(\r\n    <div className=\"card col-sm-6 col-md-4 col-lg-3 col-xl-2 m-2 p-0\">\r\n      <img src={image} className=\"card-img-top\" alt={name}/>\r\n      <div className=\"card-body text-center\">\r\n        <h5 className=\"card-title\">{name}</h5>\r\n        <Link to={`/characters/${id}`}>\r\n          More...\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport useInitialStateEpisode from '../hooks/useInitialStateEpisode'\r\nimport useInitialStateIds from '../hooks/useInitialStateIds'\r\nimport Card from './Card'\r\n\r\nexport const EpisodeInfo = () => {\r\n  const {id} = useParams()\r\n  const {data,loading} = useInitialStateEpisode(id);\r\n  const { name,air_date,episode,fullIds } = data\r\n  const {data:fullData,loading:loading_ids} = useInitialStateIds(fullIds);\r\n  console.log();\r\n  return (\r\n    <div className=\"d-flex row\">\r\n      <div className=\"d-flex flex-column col-md-6 text-center justify-content-start mt-5 animate__animated animate__zoomIn\">\r\n        { (loading || loading_ids) && <h1 className=\"animate__animated animate__flash\">Loading..</h1> }\r\n        <h1 className=\"display-4\">{name}</h1>\r\n        <h4 className=\"text-muted\">{air_date}</h4>\r\n        <h4 className=\"text-muted\">{episode}</h4>\r\n      </div>\r\n      <div className=\"row d-flex justify-content-center align-items-center mt-4 mb-4 col-md-6 animate__animated animate__jackInTheBox\">\r\n        <h4 className=\"text-center\">Characters involved</h4>\r\n        <hr/>\r\n        {\r\n          fullData.map( item => <Card key={item.id} {...item} /> )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const getAllCharacters = async() => {\r\n  const API = `https://rickandmortyapi.com/api/character`;\r\n  const data = await fetch(API)\r\n                    .then(res => res.json())\r\n                    .then(res_data => res_data)\r\n  const {results} = data\r\n  const fullData = results.map(item =>{\r\n    return {\r\n      id: item.id,\r\n      name: item.name,\r\n      status: item.status,\r\n      species: item.species,\r\n      gender: item.gender,\r\n      location: item.location.name,\r\n      image: item.image\r\n    }\r\n  })\r\n  return fullData\r\n}","import {useState,useEffect} from 'react';\r\nimport {getAllCharacters} from '../helpers/getAllCharacters';\r\n\r\nconst useInitialState = () =>{\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading:true})\r\n  \r\n  useEffect(()=>{\r\n    getAllCharacters()\r\n    .then(data => {\r\n      setState({data,\r\n                loading:false})\r\n    })\r\n  },[]);\r\n  return state;\r\n};\r\n\r\nexport default useInitialState;","import React from 'react'\r\nimport Card from './Card';\r\nimport useInitialStateCharacter from '../hooks/useInitialStateAllCharacters';\r\n\r\nconst Character = () =>{\r\n  const { data } = useInitialStateCharacter();\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"grid-character row d-flex justify-content-center mt-4 mb-4 animate__animated animate__jackInTheBox\">\r\n        {\r\n          data.map( item => <Card key={item.id} {...item} /> )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Character;","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n  return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img src=\"https://help.redbubble.com/hc/article_attachments/360002309526/Rick_and_Morty_-_logo__English_.png\" alt=\"Logo\" height=\"60\" width=\"300\"/>\r\n        </Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n              <NavLink activeClassName=\"active\" className=\"nav-item nav-link\" \r\n                exact\r\n                to=\"/characters\">\r\n                  Characters\r\n              </NavLink>\r\n              <NavLink activeClassName=\"active\" className=\"nav-item nav-link\" \r\n                exact\r\n                to=\"/episodes\">\r\n                  Episodes\r\n              </NavLink>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import {useState,useEffect} from 'react';\r\nimport {getCharacter} from '../helpers/getCharacter';\r\n\r\nconst useInitialState = (id) =>{\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading:true})\r\n  \r\n  useEffect(()=>{\r\n    getCharacter(id)\r\n    .then(data => {\r\n      setState({data,\r\n                loading:false})\r\n    })\r\n  },[id]);\r\n  return state;\r\n};\r\n\r\nexport default useInitialState;","import React from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport useInitialStateCharacter from '../hooks/useInitialStateCharacter'\r\nimport \"../assets/styles/components/CharacterInfo.scss\";\r\nexport const CharacterInfo = () => {\r\n  const {id} = useParams();\r\n  const {data,loading} = useInitialStateCharacter(id);\r\n  const {name,status,species,gender,name_location,image} = data;\r\n  const history = useHistory();\r\n  const handleBack = () =>{\r\n    return history.length<=2 ? history.push('/') : history.goBack();\r\n  }\r\n  return (\r\n    <div className=\"container mt-2 mb-3\">\r\n      <h1 className=\"display-4\">{name}</h1>\r\n      <hr/>\r\n      { loading && <h1 className=\"animate__animated animate__flash\">Loading..</h1> }\r\n      <div className=\"d-flex info-wrapper\">\r\n        <img src={image} alt={name} className=\"animate__animated animate__rollIn\"/>\r\n        <div className=\"w-100\">\r\n          <div className=\"info-character d-flex flex-column justify-content-center animate__animated animate__zoomIn\">\r\n            <span><img src=\"https://img.icons8.com/material/24/000000/worldwide-location--v1.png\" alt={name_location}/> <b>Location:</b> {name_location}</span>\r\n            <span><img src=\"https://img.icons8.com/material/24/000000/connection-status-off.png\" alt={status}/> <b>Status:</b> {status}</span>\r\n            <span><img src=\"https://img.icons8.com/material/24/000000/transgender.png\" alt={gender}/> <b>Gender:</b> {gender}</span>\r\n            <span><img src=\"https://img.icons8.com/material/24/000000/boy.png\" alt={species}/> <b>Species:</b> {species}</span>\r\n            <button type=\"button\" className=\"btn btn-primary w-50 mt-2\" onClick={handleBack}>Back</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { Episode } from '../components/Episode';\r\nimport { EpisodeInfo } from '../components/EpisodeInfo';\r\nimport Character from '../components/Character';\r\nimport Navbar from '../components/Navbar';\r\nimport { CharacterInfo } from '../components/CharacterInfo';\r\nexport const DashboardRoutes = () => {\r\n  return (\r\n    <>\r\n      <Navbar/>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/characters\" component={ Character }/>\r\n          <Route exact path=\"/characters/:id\" component={ CharacterInfo }/>\r\n          <Route exact path=\"/episodes\" component={ Episode }/>\r\n          <Route exact path=\"/episodes/:id\" component={ EpisodeInfo }/>\r\n          <Redirect to=\"/characters\"/>\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\nimport { LoginScreen } from '../components/LoginScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nexport const AppRouter = () => {\r\n  return (\r\n    <>\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={ LoginScreen }/>\r\n          <Route path=\"/\" component={ DashboardRoutes }/>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '../assets/styles/App.scss';\r\nimport { AppRouter } from '../routes/AppRouter';\r\n\r\nconst App = () =>{\r\n  return (\r\n    <>\r\n      <AppRouter/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './containers/App';\r\n\r\nReactDOM.render(<App />,document.getElementById('app'));"],"sourceRoot":""}